1 - Imports cv2, mediapipe e numpy

2 - Declara o frame q sera pego do vídeo capturado pela câmera 

3 - Nomeia o face_mesh para que ele possa ser usado

4 - Declara os pontos padrões de posições dos landmarks do nariz e dos olhos, sendo o nariz a posição onde a mascara vai estar, e os olhos como referencia de distancia e rotação

5 - Função para calcular a distancia euclidiana entre dois pontos da mascara com a câmera, ele funciona assim: Primeiro ele passa as tuplas das coordenadas (x1 e y1) e (x2 e y2) para aplicar, primeiro ele calcula a diferença das coordenadas, eleva ao quadrado para evitar valores negativos e dps aplica o teorema de pitagoras, e usa a função do numpy "sqrt" para resolver raiz, e obter a distancia desejada

6 - Função para calcular o ângulo entre dois pontos conectados, p1 e p2 e o eixo x, cada tupla representa um plano cartesiano com coordenadas x e y, sendo delta_y a variação vertical e delta_x a horizontal, calculando dps o ângulo de radianos para graus

7 - Função para calcular o valor médio, das coordenadas passadas pelas malhas faciais x e y, ele pega todos os valores x e y, e calcular o valor médio deles para resultarem em um só, calculando a media da posição do nariz da imagem

8 - Função em que você vai reajustando o tamanho da mascara conforme a distancia em que vc esta da tela, usando a função de calcular a distancia, nela vc pega a distancia que vc esta da tela, em comparação ao frame anterior, e reajusta a imagem para o novo tamanho de rosto

9 - Primeiro pegamos a posição central da mascara, pegando o valor do shape y dividido por 2 e o shape x dividido por 2, para pegar a posição central, além disso a matriz_rotacao cria uma matriz de rotação para rotacionar sua imagem, utilizando como parâmetro, o centro pois sera ele o centro em que a imagem rotacionara em volta, o ângulo em que ele ira rotacionar, negativo para ser no sentido horário, e 1 que é um fator de escala, mostrando q a imagem n sera redimensionada, após isso iremos aplicar uma transformação afim nessa mascara_resized, usando ela coo imagem de entrada, a matriz de transformação, tamanho da imagem de saída, que deve ser o mesmo, e o metado, q é interpolação bilinear, que visa melhor qualidade

10 - Separo a camada alpha da imgem, deixando apenas bgr, para que ela n fique transparente

11 - Função para calcular o deslocamento para posicionar uma mascara em relação as coordenadas do nariz, isso serve para centralizar a mascara nas coordenadas do nariz, dividindo por 2 a largura e a altura, podemos adquirir o centro da mascara tbm, subtraindo e sobrepondo ela na posição do nariz

12 - Função para evitar que a imagem fuja para fora dos limites da imagem, criando uma quebra no script, garantindo primeiro q eles n sejam menor que 0 e depois que a macara n seja maior q a largura da imageme nem altura

13 - Função para extrair a sub-região deseja da minha imagem em que eu devo aplicar, depois extraio o canal alpha da sub-região e normalizo o canal de transparência dele

14 - Este código aplica uma máscara a uma sub-região específica de uma imagem, canal por canal, utilizando uma operação de mistura ponderada pelo valor alpha_region. Isso é útil em operações de processamento de imagem, como sobreposição de filtros ou efeitos visuais.